cmake_minimum_required(VERSION 3.2)

set(FLAG -O3 -std=c++20)

include_directories(${CMAKE_CURRENT_SOURCE_DIR})
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/benchmarks)

set (Ds 1 2 4 8)
set (Hs 1 2 4 8 16 32 64 128)
set (Ns 100000 1000000 10000000)
set (Cs 1 2 4 8)

set(DHN_TESTS insert remove point_query intersect_query intersect_query_simd knn_query)
foreach(TEST ${DHN_TESTS})
  file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/benchmarks/${TEST})
  foreach(D ${Ds})
    foreach(H ${Hs})
      foreach(N ${Ns})
        configure_file(${TEST}.cpp ${TEST}${D}_${H}_${N}.cpp)
        add_executable(${TEST}_${D}_${H}_${N} ${TEST}${D}_${H}_${N}.cpp)
        target_compile_options(${TEST}_${D}_${H}_${N} PRIVATE -march=native ${FLAG})
        add_test(NAME ${TEST}_${D}_${H}_${N} COMMAND ${TEST}_${D}_${H}_${N})
      endforeach()
    endforeach()
  endforeach()
endforeach()

set(DHNC_TESTS insert_parallel remove_parallel)
foreach(TEST ${DHNC_TESTS})
  file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/benchmarks/${TEST})
  foreach(D ${Ds})
    foreach(H ${Hs})
      foreach(N ${Ns})
        foreach(C ${Cs})
          configure_file(${TEST}.cpp ${TEST}${D}_${H}_${N}_${C}.cpp)
          add_executable(${TEST}_${D}_${H}_${N}_${C} ${TEST}${D}_${H}_${N}_${C}.cpp)
          target_compile_options(${TEST}_${D}_${H}_${N}_${C} PRIVATE -march=native ${FLAG})
          add_test(NAME ${TEST}_${D}_${H}_${N}_${C} COMMAND ${TEST}_${D}_${H}_${N}_${C})
        endforeach()
      endforeach()
    endforeach()
  endforeach()
endforeach()
